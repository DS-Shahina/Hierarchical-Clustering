# Load the dataset
install.packages("readr")
library(readr)
EWA <- read.csv(file.choose())
EWA <- read.csv(file.choose())
str(EWA)
"3. Data Pre-processing"
attach(EWA)
summary(EWA)
dup <- duplicated(EWA)
dup
EWA1_new <- EWA[!duplicated(EWA),]#checking rows if duplicate is there or not
EWA1_new
boxplot(Balance)
boxplot(Qual_miles)
boxplot(cc1_miles) # no outliers
boxplot(cc2_miles) # we leave this because it is a categorical variable and categorical variables has no outliers it's like 0's and 1's (Basically categories)
boxplot(cc3_miles) # we leave this because it is a categorical variable and categorical variables has no outliers it's like 0's and 1's (Basically categories)
boxplot(Bonus_miles)
boxplot(Bonus_trans)
boxplot(Flight_miles_12mo)
boxplot(Flight_trans_12)
boxplot(Days_since_enroll) # no outliers
boxplot(Award.) # no outliers
#1) Balance
qunt1 <- quantile(EWA$Balance,probs = c(.25,.75))
qunt1 # 25% - 18527.5, 75% - 92404.0
win1 <- quantile(EWA$Balance,probs = c(.01,.80), na.rm =T) # probability of 1% and 80%, and remove na value.
win1 # 1% = 909.62, 99% = 109312.80
H <- 1.5*IQR(EWA$Balance, na.rm = T)
H #110814.8
# Outliers defined as obeservations that fall below Q1-1.5IQR and above Q3+1.5IQR
# here we have to figure out that if outliers is there if it's below then Q1-1.5IQR then replace with 1%
# Same thing if outliers is there if it's above then Q3+1.5IQR then replace with 99%
# Q1-1.5IQR < Outlier - then replace with 1%
# Q3+1.5IQR > Outlier - then replace with 99%
EWA$Balance[EWA$Balance<(qunt1[1]-H)] <- win1[1]
EWA$Balance[EWA$Balance>(qunt1[2]+H)] <- win1[2]
Balance_new <- boxplot(EWA$Balance)
Balance_new
# now apply for all variables
#2) Qual_miles
qunt2 <- quantile(EWA$Qual_miles,probs = c(.25,.75))
qunt2
win2 <- quantile(EWA$Qual_miles,probs = c(.01,.85), na.rm =T)
win2
A <- 1.5*IQR(EWA$Qual_miles, na.rm = T)
A
EWA$Qual_miles[EWA$Qual_miles<(qunt2[1]-A)] <- win2[1]
EWA$Qual_miles[EWA$Qual_miles>(qunt2[2]+A)] <- win2[2]
Qual_miles_new <- boxplot(EWA$Qual_miles)
Qual_miles_new
#3) Bonus_miles
qunt3 <- quantile(EWA$Bonus_miles,probs = c(.25,.75))
qunt3
win3 <- quantile(EWA$Bonus_miles,probs = c(.01,.90), na.rm =T) # we can change the limits(% so that outliers remove)
win3
B <- 1.5*IQR(EWA$Bonus_miles, na.rm = T)
B
EWA$Bonus_miles[EWA$Bonus_miles<(qunt3[1]-B)] <- win3[1]
EWA$Bonus_miles[EWA$Bonus_miles>(qunt3[2]+B)] <- win3[2]
Bonus_miles_new <- boxplot(EWA$Bonus_miles)
Bonus_miles_new
#4) Bonus_trans
qunt4 <- quantile(EWA$Bonus_trans,probs = c(.25,.75))
qunt4
###### Normalization
# if we have more 0's and 1's in the data we go to Normalization
# to normalize the data we use custom function
norm <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
# remove first column
EWA_mt <- EWA[,-c(1,4,5,6,12)] # removing binary varibales because it is not good for clustering and also remove unwanted variables
EWA_norm <- as.data.frame(lapply(EWA_mt, norm))
###### Normalization
# if we have more 0's and 1's in the data we go to Normalization
# to normalize the data we use custom function
norm <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
# remove first column
EWA_mt <- EWA[,-c(1,4,5,6,12)] # removing binary varibales because it is not good for clustering and also remove unwanted variables
EWA_norm <- as.data.frame(lapply(EWA_mt, norm))
summary(EWA_norm)
# To apply standardization we have inbuilt function scale
# we use mtcars dataset
# use scale function
EWA_scale <- as.data.frame(scale(EWA_mt))
"4. Exploratory Data Analysis (EDA):"
#Measures of Central Tendency / First moment business decision
summary(EWA)
#Balance
mean(Balance)
median(Balance)
# mode function
Mode <- function(x){
a = unique(x) # x is a vector
return(a[which.max(tabulate(match(x, a)))])
}
Mode(Balance)
#Qual_miles
mean(Qual_miles)
median(Qual_miles)
Mode(Qual_miles)
#cc1_miles
mean(cc1_miles)
median(cc1_miles)
Mode(cc1_miles)
#Bonus_miles
mean(Bonus_miles)
median(Bonus_miles)
Mode(Bonus_miles)
#Bonus_trans
mean(Bonus_trans)
median(Bonus_trans)
Mode(Bonus_trans)
#Flight_miles_12mo
mean(Flight_miles_12mo)
median(Flight_miles_12mo)
Mode(Flight_miles_12mo)
#Flight_trans_12
mean(Flight_trans_12)
median(Flight_trans_12)
Mode(Flight_trans_12)
#Days_since_enroll
mean(Days_since_enroll)
median(Days_since_enroll)
Mode(Days_since_enroll)
# Measures of Dispersion / Second moment business decision
#Balance
var(Balance) # variance
sd(Balance) #standard deviation
densityplot(Award.)
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit <- hclust(d, method = "complete")
fit
#Display dendrogram
plot(fit)
plot(fit, hang = -1)
groups <- cutree(fit, k = 3) # cut tree into 3 clusters
# we can cut as we want but 3 is sufficient
groups # 1 is for 1st cluster, 2 is for 2nd cluster, 3 is for 3rd cluster
typeof(groups)
rect.hclust(fit, k = 5, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput1R.csv") # or write_xl - in excel formal
# get working directory
getwd()
# When k = 3, cluster into 3 parts:-
"We are trying to learn more about EastWest Airlines' customers
based on their flying patterns, earning and use of frequent flyer
rewards, and use of the airline credit card.
The primary objective is to identify customer segments via clustering
and design targeted marketing campaigns for each segment.
In this clustering:-
customer segment1 : 3rd group (Highest number)
customer segment2 : 2nd group (second Highest number)
customer segment3 : 1st group (third Highest number)
"
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit1 <- hclust(d, method = "Average")
fit1
#Display dendrogram
plot(fit1)
plot(fit1, hang = -1)
groups <- cutree(fit1, k = 5)
groups
typeof(groups)
rect.hclust(fit, k = 7, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput2R.csv") # or write_xl - in excel formal
# get working directory
getwd()
# when k = 5 , cluster into 5 parts & clustering method is Average linkage
"In this clustering:-
customer segment1 : 5th group (Highest number)
customer segment2 : 2nd group (second Highest number)
customer segment3 : 3rd group (third Highest number)
customer segment3 : 4th group (third Highest number)
customer segment3 : 1st group (third Highest number)
"
# 3rd time - change k values
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit2 <- hclust(d, method = "single")
fit2
#Display dendrogram
plot(fit2)
plot(fit2, hang = -1)
groups <- cutree(fit2, k = 4)
groups
typeof(groups)
rect.hclust(fit2, k = 3, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput3R.csv") # or write_xl - in excel formal
# get working directory
getwd()
# when k = 4 , cluster into 4 parts & clustering method is single linkage
"In this clustering:-
customer segment1 : 4th group (Highest number)
customer segment2 : 2nd group (second Highest number)
customer segment3 : 1st group (third Highest number)
customer segment3 : 3rd group (third Highest number)
"
"6. Share the benefits/impact of the solution - how or in what way the business (client) gets benefit from the solution provided. "
"On the basis clustering we know more about the EastWest Airlines' customers
based on their flying patterns, earning and use of frequent flyer
rewards, and use of the airline credit card. we know more about them by
identifying customer segments via clustering
and design targeted marketing campaigns for each segment.
Now, we can more figure out which segment has more profit and which has less"
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit <- hclust(d, method = "complete")
fit
#Display dendrogram
plot(fit)
plot(fit, hang = -1)
groups <- cutree(fit, k = 3) # cut tree into 3 clusters
# we can cut as we want but 3 is sufficient
groups # 1 is for 1st cluster, 2 is for 2nd cluster, 3 is for 3rd cluster
typeof(groups)
rect.hclust(fit, k = 5, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput1R.csv") # or write_xl - in excel formal
# get working directory
getwd()
setwd("D:/C DRIVE-SSD DATA backup 15-12-2020/Desktop/360DigiTmg Assignment/Hierarchical Clustering")
write_csv(final, "EWAoutput1R.csv") # or write_xl - in excel formal
# get working directory
getwd()
# When k = 3, cluster into 3 parts:-
"We are trying to learn more about EastWest Airlines' customers
based on their flying patterns, earning and use of frequent flyer
rewards, and use of the airline credit card.
The primary objective is to identify customer segments via clustering
and design targeted marketing campaigns for each segment.
In this clustering:-
customer segment1 : 3rd group (Highest number)
customer segment2 : 2nd group (second Highest number)
customer segment3 : 1st group (third Highest number)
"
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit1 <- hclust(d, method = "Average")
fit1
#Display dendrogram
plot(fit1)
plot(fit1, hang = -1)
groups <- cutree(fit1, k = 5)
groups
typeof(groups)
rect.hclust(fit, k = 7, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput2R.csv") # or write_xl - in excel formal
# when k = 5 , cluster into 5 parts & clustering method is Average linkage
"In this clustering:-
customer segment1 : 5th group (Highest number)
customer segment2 : 2nd group (second Highest number)
customer segment3 : 3rd group (third Highest number)
customer segment3 : 4th group (third Highest number)
customer segment3 : 1st group (third Highest number)
"
# 3rd time - change k values
# Distance matrix
d <- dist(EWA_norm, method = "euclidean")
d
fit2 <- hclust(d, method = "single")
fit2
#Display dendrogram
plot(fit2)
plot(fit2, hang = -1)
groups <- cutree(fit2, k = 4)
groups
typeof(groups)
rect.hclust(fit2, k = 3, border = "red")
membership <- as.matrix(groups)
membership
typeof(membership)
final <- data.frame(membership, EWA_mt)
aggregate(EWA_mt, by = list(final$membership), FUN = mean)
library(readr)
write_csv(final, "EWAoutput3R.csv") # or write_xl - in excel formal
# get working directory
getwd()
